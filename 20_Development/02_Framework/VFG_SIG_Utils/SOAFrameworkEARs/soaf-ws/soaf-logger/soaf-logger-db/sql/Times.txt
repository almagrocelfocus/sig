SELECT *
FROM
  (SELECT '1_TOTAL'             AS TASK,
    COUNT(DISTINCT(MESSAGE_ID)) AS VALUE,
    SERVICE_NAME
  FROM LOG
  WHERE TASK LIKE 'SERVICE%'
  GROUP BY SERVICE_NAME
  UNION ALL
  SELECT '2_MIN_TIME (MS)' AS TASK,
    ROUND(MIN(MS),2)       AS VALUE,
    SERVICE_NAME
  FROM
    (SELECT SERVICE_NAME,
      MESSAGE_ID,
      ROUND(AVG( EXTRACT( DAY FROM DIFF )*24*60*60*1000 + EXTRACT( HOUR FROM DIFF )*60*60*1000 + EXTRACT( MINUTE FROM DIFF )*60*1000 + ROUND(EXTRACT( SECOND FROM DIFF )*1000))) MS
    FROM
      (SELECT V1.MESSAGE_ID,
        MAX(V2.TIMESTAMP)-MIN(V1.TIMESTAMP) AS DIFF,
        V1.SERVICE_NAME
      FROM LOG V1
      INNER JOIN LOG V2
      ON V1.MESSAGE_ID = V2.MESSAGE_ID
      AND V1.ID       <> V2.ID
      WHERE V1.TASK   IN ('SERVICE_START')
      AND V2.TASK     IN ('SERVICE_END', 'SERVICE_ERROR')
      GROUP BY V1.MESSAGE_ID,
        V1.SERVICE_NAME
      )
    GROUP BY SERVICE_NAME,
      MESSAGE_ID
    )
  GROUP BY SERVICE_NAME
  UNION ALL
  SELECT '3_MAX_TIME (MS)' AS TASK,
    ROUND(MAX(MS),2)       AS VALUE,
    SERVICE_NAME
  FROM
    (SELECT SERVICE_NAME,
      MESSAGE_ID,
      ROUND(AVG( EXTRACT( DAY FROM DIFF )*24*60*60*1000 + EXTRACT( HOUR FROM DIFF )*60*60*1000 + EXTRACT( MINUTE FROM DIFF )*60*1000 + ROUND(EXTRACT( SECOND FROM DIFF )*1000))) MS
    FROM
      (SELECT V1.MESSAGE_ID,
        MAX(V2.TIMESTAMP)-MIN(V1.TIMESTAMP) AS DIFF,
        V1.SERVICE_NAME
      FROM LOG V1
      INNER JOIN LOG V2
      ON V1.MESSAGE_ID = V2.MESSAGE_ID
      AND V1.ID       <> V2.ID
      WHERE V1.TASK   IN ('SERVICE_START')
      AND V2.TASK     IN ('SERVICE_END', 'SERVICE_ERROR')
      GROUP BY V1.MESSAGE_ID,
        V1.SERVICE_NAME
      )
    GROUP BY SERVICE_NAME,
      MESSAGE_ID
    )
  GROUP BY SERVICE_NAME
  UNION ALL
  SELECT '4_AVG_TIME (MS)' AS TASK,
    ROUND(AVG(MS),2)       AS VALUE,
    SERVICE_NAME
  FROM
    (SELECT SERVICE_NAME,
      MESSAGE_ID,
      ROUND(AVG( EXTRACT( DAY FROM DIFF )*24*60*60*1000 + EXTRACT( HOUR FROM DIFF )*60*60*1000 + EXTRACT( MINUTE FROM DIFF )*60*1000 + ROUND(EXTRACT( SECOND FROM DIFF )*1000))) MS
    FROM
      (SELECT V1.MESSAGE_ID,
        MAX(V2.TIMESTAMP)-MIN(V1.TIMESTAMP) AS DIFF,
        V1.SERVICE_NAME
      FROM LOG V1
      INNER JOIN LOG V2
      ON V1.MESSAGE_ID = V2.MESSAGE_ID
      AND V1.ID       <> V2.ID
      WHERE V1.TASK   IN ('SERVICE_START')
      AND V2.TASK     IN ('SERVICE_END', 'SERVICE_ERROR')
      GROUP BY V1.MESSAGE_ID,
        V1.SERVICE_NAME
      )
    GROUP BY SERVICE_NAME,
      MESSAGE_ID
    )
  GROUP BY SERVICE_NAME
  UNION ALL
  SELECT '5_ADAPTER_TIME (MS)' AS TASK,
    ROUND(AVG(MS),2)           AS VALUE,
    SERVICE_NAME
  FROM
    (SELECT SERVICE_NAME,
      MESSAGE_ID,
      ROUND(SUM( EXTRACT( DAY FROM DIFF )*24*60*60*1000 + EXTRACT( HOUR FROM DIFF )*60*60*1000 + EXTRACT( MINUTE FROM DIFF )*60*1000 + ROUND(EXTRACT( SECOND FROM DIFF )*1000))) MS
    FROM
      (SELECT V1.MESSAGE_ID,
        MAX(V2.TIMESTAMP)-MIN(V1.TIMESTAMP) AS DIFF,
        V_SERVICE.SERVICE_NAME
      FROM LOG V1
      INNER JOIN LOG V2
      ON V1.MESSAGE_ID = V2.MESSAGE_ID
      AND V1.ID       <> V2.ID
      INNER JOIN LOG V_SERVICE
      ON V1.MESSAGE_ID   = V_SERVICE.MESSAGE_ID
      AND V_SERVICE.TASK = 'SERVICE_START'
      WHERE V1.TASK     IN ('ADAPTER_START')
      AND V2.TASK       IN ('ADAPTER_END', 'ADAPTER_ERROR')
      GROUP BY V1.MESSAGE_ID,
        V_SERVICE.SERVICE_NAME
      )
    GROUP BY SERVICE_NAME,
      MESSAGE_ID
    )
  GROUP BY SERVICE_NAME
  UNION ALL
  SELECT '6_OSB_TIME (MS)'                  AS TASK,
    MAX(SERVICE_VALUE) - MAX(ADAPTER_VALUE) AS VALUE,
    SERVICE_NAME
  FROM
    (SELECT SERVICE_NAME,
      ROUND(AVG(MS),2) AS ADAPTER_VALUE,
      0                AS SERVICE_VALUE
    FROM
      (SELECT SERVICE_NAME,
        MESSAGE_ID,
        ROUND(SUM( EXTRACT( DAY FROM DIFF )*24*60*60*1000 + EXTRACT( HOUR FROM DIFF )*60*60*1000 + EXTRACT( MINUTE FROM DIFF )*60*1000 + ROUND(EXTRACT( SECOND FROM DIFF )*1000))) MS
      FROM
        (SELECT V1.MESSAGE_ID,
          MAX(V2.TIMESTAMP)-MIN(V1.TIMESTAMP) AS DIFF,
          V_SERVICE.SERVICE_NAME
        FROM LOG V1
        INNER JOIN LOG V2
        ON V1.MESSAGE_ID = V2.MESSAGE_ID
        AND V1.ID       <> V2.ID
        INNER JOIN LOG V_SERVICE
        ON V1.MESSAGE_ID   = V_SERVICE.MESSAGE_ID
        AND V_SERVICE.TASK = 'SERVICE_START'
        WHERE V1.TASK     IN ('ADAPTER_START')
        AND V2.TASK       IN ('ADAPTER_END', 'ADAPTER_ERROR')
        GROUP BY V1.MESSAGE_ID,
          V_SERVICE.SERVICE_NAME
        )
      GROUP BY SERVICE_NAME,
        MESSAGE_ID
      )
    GROUP BY SERVICE_NAME
    UNION ALL
    SELECT SERVICE_NAME,
      0                AS ADAPTER_VALUE,
      ROUND(AVG(MS),2) AS SERVICE_VALUE
    FROM
      (SELECT SERVICE_NAME,
        MESSAGE_ID,
        ROUND(AVG( EXTRACT( DAY FROM DIFF )*24*60*60*1000 + EXTRACT( HOUR FROM DIFF )*60*60*1000 + EXTRACT( MINUTE FROM DIFF )*60*1000 + ROUND(EXTRACT( SECOND FROM DIFF )*1000))) MS
      FROM
        (SELECT V1.MESSAGE_ID,
          MAX(V2.TIMESTAMP)-MIN(V1.TIMESTAMP) AS DIFF,
          V1.SERVICE_NAME
        FROM LOG V1
        INNER JOIN LOG V2
        ON V1.MESSAGE_ID = V2.MESSAGE_ID
        AND V1.ID       <> V2.ID
        WHERE V1.TASK   IN ('SERVICE_START')
        AND V2.TASK     IN ('SERVICE_END', 'SERVICE_ERROR')
        GROUP BY V1.MESSAGE_ID,
          V1.SERVICE_NAME
        )
      GROUP BY SERVICE_NAME,
        MESSAGE_ID
      )
    GROUP BY SERVICE_NAME
    )
  GROUP BY SERVICE_NAME
  UNION ALL
  SELECT '_# MISSING LOGS'         AS TASK,
    COUNT(DISTINCT VL.MESSAGE_ID) AS VALUE,
    VL.SERVICE_NAME
  FROM LOG VL
  LEFT OUTER JOIN
    (SELECT V1.MESSAGE_ID,
      V1.SERVICE_NAME
    FROM LOG V1
    INNER JOIN LOG V2
    ON V1.MESSAGE_ID       = V2.MESSAGE_ID
    AND V1.ID             <> V2.ID
    WHERE V1.TASK         IN ('SERVICE_START')
    AND V2.TASK           IN ('SERVICE_END', 'SERVICE_ERROR')
    ) TMP ON VL.MESSAGE_ID = TMP.MESSAGE_ID
  WHERE VL.TASK LIKE 'SERVICE%'
  AND TMP.MESSAGE_ID IS NULL
  GROUP BY VL.SERVICE_NAME
  )
WHERE
  --1_TOTAL
  --2_MIN_TIME (MS)
  --3_MAX_TIME (MS)
  --4_AVG_TIME (MS)
  --5_ADAPTER_TIME (MS)
  --6_OSB_TIME (MS)
  TASK NOT IN ('2_MIN_TIME (MS)','3_MAX_TIME (MS)')
ORDER BY SERVICE_NAME,
  TASK ; 